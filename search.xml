<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>《区块链安全》_翁健主编</title>
    <url>/posts/665ba237.html</url>
    <content><![CDATA[<!-- # 《区块链安全》-翁健主编 -->
<h2 id="网络空间安全专业核心教材体系建设一一建议使用时间">网络空间安全专业核心教材体系建设一一建议使用时间</h2>
<p><img src="/img/blockchain_sec/0_1.jpg" alt="教材体系建设"></p>
<h2 id="绪论">绪论</h2>
<h3 id="区块链本质">区块链本质</h3>
<ul>
<li>一份分布式的公共记账本</li>
<li>共享、可信的公共记账本</li>
</ul>
<h3 id="区块链技术是什么">区块链技术是什么</h3>
<ul>
<li>从<strong>狭义</strong>角度来讲，区块链技术是一种基于时间顺序的分布式账本，它将数据区块通过首尾相连的方式组合而成一种链式数据结构，以密码学为基础来保障数据的不可篡改、不可伪造等特性。</li>
<li>从<strong>广义</strong>角度来讲，区块链技术是基于密码学、时间戳等技术来传输和验证数据，通过链式数据结构来存储数据利用共识机制来生成和更新数据，并通过设计可编程智能合约来实现的一种全新去中心基础架构与分布式计算范式。</li>
</ul>
<h3 id="区块链技术发展阶段">区块链技术发展阶段</h3>
<p><img src="/img/blockchain_sec/1_1.jpg" alt="区块链技术发展阶段"></p>
<h3 id="区块链基础特性">区块链基础特性</h3>
<p>基于区块链的链式数据结构、分布式网络以及底层的密码学原理，使区块链具有去中心化性（Decentralization ）、公开透明性（Transparency）、集体维护性（Collective Maintenance） 、一致性（Consistency ）、不可篡改性（Tamper-Resistance）和匿名性（Anonymity）的安全特点。</p>
<ol>
<li>
<p><strong>去中心化性（Decentralization）：</strong> 区块链的去中心化性质是指没有单一的中央权威机构控制整个网络。相反，网络中的所有参与者都共同参与到决策和数据验证的过程中。这降低了对中央机构的依赖，减少了单点故障的风险，并提高了系统的鲁棒性。</p>
</li>
<li>
<p><strong>公开透明性（Transparency）：</strong> 区块链中的所有交易和数据都是公开的，对所有参与者都可见。这种透明性有助于防止欺诈和不当行为，同时增加了用户对系统的信任。任何人都可以查看区块链上的交易记录，并验证其准确性。</p>
</li>
<li>
<p><strong>集体维护性（Collective Maintenance）：</strong> 区块链的数据被分布在网络的多个节点上，每个节点都有一份完整的数据副本。这使得维护和更新系统的责任分散到整个网络中的参与者。通过集体的共识算法，网络可以就数据的状态达成一致，而无需中央控制。</p>
</li>
<li>
<p><strong>一致性（Consistency）：</strong> 区块链通过共识机制确保网络中的所有节点对数据的状态达成一致意见。一旦一个区块被添加到链上，所有节点都必须接受这个区块，以确保整个系统的一致性。这有助于防止双重支付等问题。</p>
</li>
<li>
<p><strong>不可篡改性（Tamper-Resistance）：</strong> 区块链中的数据是以区块的形式链接在一起的，而且每个区块都包含前一个区块的哈希值。这种链接使得一旦数据被写入区块链，就极难篡改。因为修改一个区块会导致其后所有区块的哈希值变化，从而引起网络的不一致。这种特性使得区块链在防止数据篡改和保护数据完整性方面非常强大。</p>
</li>
<li>
<p><strong>匿名性（Anonymity）：</strong> 虽然不是所有区块链系统都具有匿名性，但一些区块链网络允许用户在交易中保持相对匿名。这通过使用密码学技术来保护用户的身份信息。匿名性有助于保护用户的隐私权，但也可能引发一些法律和道德问题，因此在不同的区块链系统中，匿名性的程度可能有所不同。在比特币网络中，由于交易可以被链接，因此称为<strong>伪匿名（Pseudo-anonymity）</strong>。其后发展的技术如Zcash、门罗币，利用<strong>零知识证明</strong>可以实现完全匿名的数字货币。</p>
</li>
</ol>
<h3 id="智能合约">智能合约</h3>
<ol>
<li><strong>定义：</strong> 一套以数字形式定义的承诺，包括合约参与者可以在上面执行这些承诺的协议。</li>
<li><strong>特征</strong></li>
</ol>
<ul>
<li><strong>承诺（Commitment）：</strong> 承诺在这里指的是合约参与者协商后同意的各自的权利和义务，承诺的各项内容共同定义了某个特定的合约的本质与目的。</li>
<li><strong>数字形式（Digitally）：</strong> 数字形式是指合约必须以机器语言而非自然语来进行具体的实现，由计算机程序自动执行，且一般合约以代码形式执行后就不可更改。</li>
<li><strong>计算机协议（Computer Protocol）：</strong> 协议是技术实现，在选择的协议基础之上，合约承诺被最终实现，并且其执行的全过程被记录下来。</li>
</ul>
<h3 id="区块链技术演进">区块链技术演进</h3>
<ol>
<li>
<p><strong>侧链技术（Sidechain）：</strong> 侧链是一种在不同区块链之间传输资产的机制。它允许在主链（通常是主要的区块链网络，如比特币或以太坊）之外创建一个独立的区块链，称为侧链。侧链可以具有自己的规则和功能，但与主链保持连接，以实现跨链资产转移。这使得在不同链上传输资产成为可能，同时确保安全性和去中心化。</p>
</li>
<li>
<p><strong>闪电网络（Lightning Network）：</strong> 闪电网络是一种用于提高区块链性能和扩展性的第二层解决方案。它建立在区块链之上，允许在参与者之间创建直接的支付通道，而不必每笔交易都写入区块链。这样可以大大提高交易速度，并减少交易费用。闪电网络使用智能合约来确保支付的安全性和不可篡改性。</p>
</li>
<li>
<p><strong>zk-SNARK（Zero-Knowledge Succinct Non-Interactive Argument of Knowledge）：</strong> zk-SNARK是一种零知识证明系统，允许一个实体证明它拥有某些信息，而无需透露该信息的实际内容。在区块链上，zk-SNARK可用于提供匿名性、隐私保护以及验证某些条件是否得到满足，而无需公开涉及的详细信息。这使得在保护隐私的同时，仍能进行有效的验证。</p>
</li>
<li>
<p><strong>有向无环图（Directed Acyclic Graph，DAG）：</strong> 有向无环图是一种数据结构，与传统的区块链不同，它不需要块以线性链的形式连接。每个节点可以有多个父节点，数据以图的形式组织，且不会形成环路。IOTA是一个采用DAG结构的加密货币项目，其Tangle技术允许快速而无费的交易，通过对交易的验证来增加网络的安全性。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>区块链</category>
        <category>《区块链安全》</category>
      </categories>
      <tags>
        <tag>区块链</tag>
        <tag>网络安全</tag>
        <tag>学习记录</tag>
      </tags>
  </entry>
  <entry>
    <title>信息泄露</title>
    <url>/posts/76189c5e.html</url>
    <content><![CDATA[<h1>超详细敏感信息泄露漏洞总结</h1>
<p><strong>发布日期：2022-03-30 21:42:41</strong></p>
<h2 id="免责声明">免责声明</h2>
<p>本文提供的工具、教程、学习路线、精品文章均为原创或互联网收集，旨在提高网络安全技术水平为目的，只做技术研究，谨遵守国家相关法律法规，请勿用于违法用途。</p>
<h2 id="内容速览">内容速览</h2>
<ul>
<li>0x01 漏洞简介</li>
<li>0x02 漏洞是怎么发生的</li>
<li>0x03 漏洞危害</li>
<li>0x04 测试方法</li>
</ul>
<h2 id="漏洞简介">漏洞简介</h2>
<p>敏感数据包括但不限于：口令、密钥、证书、会话标识、License、隐私数据(如短消息的内容)、授权凭据、个人数据(如姓名、住址、电话等)等。</p>
<p>在程序文件、配置文件、日志文件、备份文件及数据库中都有可能包含敏感数据。主要分为由版本管理软件导致的泄露, 文件包含导致的泄露和配置错误导致的泄露.</p>
<h2 id="漏洞是怎么发生的">漏洞是怎么发生的</h2>
<ul>
<li>未能从公共内容中删除内部内容。例如，在生产环境中，用户有时可以看到开发人员在加价中的评论。</li>
<li>网站及相关技术配置不安全。例如，如果无法禁用调试和诊断功能，有时可能会为攻击者提供有用的工具，帮助他们获取敏感信息。默认配置也会使网站变得脆弱，例如，通过显示过于冗长的错误消息。</li>
<li>应用程序的设计和行为缺陷。例如，如果网站在出现不同错误状态时返回不同的响应，这也可以允许攻击者列举敏感数据，例如有效的用户凭据。</li>
</ul>
<h2 id="漏洞危害">漏洞危害</h2>
<ul>
<li>扫描内网开放服务</li>
<li>向内部任意主机的任意端口发送payload来攻击内网服务</li>
<li>DOS攻击（请求大文件，始终保持连接Keep-Alive Always）</li>
<li>攻击内网的web应用，例如直接SQL注入、XSS攻击等</li>
<li>利用file、gopher、dict协议读取本地文件、执行命令等</li>
</ul>
<h2 id="测试方法">测试方法</h2>
<h3 id="检测形式多样">检测形式多样</h3>
<p>工具爬虫扫描得到敏感文件的路径，从而找到敏感数据，主要是还是通过关键词爆破。</p>
<h3 id="手工挖掘">手工挖掘</h3>
<p>根据web容器或者网页源代码的查看,Github，找到敏感信息。</p>
<h3 id="操作系统版本">操作系统版本</h3>
<p>可用nmap扫描得知</p>
<h3 id="中间件的类型、版本">中间件的类型、版本</h3>
<p>http返回头, 404报错页面, 使用工具（如whatweb）</p>
<h3 id="Web敏感信息">Web敏感信息</h3>
<ul>
<li>phpinfo()信息泄露: <code>http://[ip]/test.php</code>，<code>http://[ip]/phpinfo.php</code></li>
<li>测试网页泄露在外网: <code>test.cgi</code>、<code>phpinfo.php</code>、<code>info.php</code>等</li>
<li>编辑器备份文件泄漏在外网: <code>http://[ip]/test.php.swp</code>、<code>http://[ip]/test.php.bak</code>、<code>http://[ip]/test.jsp.old</code>、<code>http://[ip]/cgi~</code></li>
<li>版本管理工具（如git）文件信息泄露: <code>http://[ip]/.git/config</code>、<code>http://[ip]/CVS/Entriesp</code>、<code>http://[ip]/.svn/entriesp</code></li>
<li>HTTP认证信息泄露: <code>http://[ip]/basic/index.php</code></li>
<li>管理后台地址泄露: <code>http://[ip]/login.php</code>、<code>http://[ip]/admin.php</code>、<code>http://[ip]/manager.php</code>、 <code>http://[ip]/admin_login.php</code></li>
</ul>
<h2 id="防止敏感信息泄露">防止敏感信息泄露</h2>
<p>在进行网站和系统维护时，请务必注意以下潜在风险和防范措施：</p>
<h3 id="员工信息泄露">员工信息泄露</h3>
<p>避免泄露员工邮箱和分机号码，这可能被恶意利用，例如社交工程攻击或生成字典攻击。</p>
<h3 id="错误页面暴露信息">错误页面暴露信息</h3>
<p>确保错误页面不暴露敏感信息，包括但不限于 MySQL 错误、PHP 错误、以及 CMS 版本等。</p>
<h3 id="探针文件">探针文件</h3>
<p>谨慎处理探针文件，如 robots.txt 和 phpMyAdmin，防止未授权访问。</p>
<h3 id="网站源码备份文件">网站源码备份文件</h3>
<p>避免将网站源码备份文件（如 .rar、.tar.gz、.zip）存放在可公开访问的位置，以免泄露敏感信息。</p>
<h3 id="网络信息泄露">网络信息泄露</h3>
<p>定期检查网络配置，防止 DNS 域传送漏洞、运维监控系统弱口令、网络拓扑泄露等问题。</p>
<h3 id="第三方软件应用">第三方软件应用</h3>
<p>审查 GitHub 上的源码，确保其中不包含敏感信息，防止数据库、邮箱密码泄露。</p>
<h3 id="敏感信息搜集工具">敏感信息搜集工具</h3>
<p>避免使用或谨慎使用搜集敏感信息的工具，包括但不限于 weakfilescan、BBScan、whatweb、dnsenum 等。</p>
<h2 id="安全工具推荐">安全工具推荐</h2>
<ul>
<li><a href="https://github.com/ring04h/weakfilescan">weakfilescan</a></li>
<li><a href="https://github.com/lijiejie/BBScan">BBScan</a></li>
<li><a href="https://github.com/urbanadventurer/WhatWeb">whatweb</a></li>
<li><a href="https://github.com/fwaeytens/dnsenum">dnsenum</a></li>
<li><a href="https://github.com/">github</a></li>
</ul>
<p><strong>注意：在进行任何安全检查和调整时，请确保遵循合法合规的道德准则，以保护系统和用户的利益。</strong></p>
<blockquote>
<p>转载自<a href="https://cloud.tencent.com/developer/article/1969038">超详细敏感信息泄露漏洞总结</a></p>
</blockquote>
]]></content>
      <categories>
        <category>web安全</category>
        <category>信息泄露</category>
      </categories>
      <tags>
        <tag>web安全</tag>
        <tag>信息泄露</tag>
      </tags>
  </entry>
  <entry>
    <title>《启发》_罗振宇</title>
    <url>/posts/64e2ab84.html</url>
    <content><![CDATA[<blockquote>
<p>我把所有的内容形式分成三种：故事、观点、启发。“故事”，是把别人邀请进自己布置的世界里；“观点&quot;，是把自己的想法放进别人的世界里。这都是单向的互动过程。而“启发”则要复杂得多，它至少包含了四个部分：</p>
<ol>
<li>第一，我自己有一个挑战性问题；</li>
<li>第二，我在其他领域偶然遇到了一个新信息；</li>
<li>第三，这个新信息让我的问题有了一个新答案；</li>
<li>第四，这个新答案，还能扩展成一个新思路，可以应用到更广泛的领域。</li>
</ol>
</blockquote>
<blockquote>
<p>这四个心理过程同时发生了，才能称之为一个“启发”。“故事&quot;和“观点”也许另有所图。唯有“启发&quot;，指向自己的成长。</p>
</blockquote>
<h2 id="A">A</h2>
<h3 id="爱好">爱好</h3>
<p>人为什么要有爱好？有一个解释，说爱好最大的用处，是你可以通过它培养自制力。</p>
<p><strong>爱好，不是你生命之外的东西，而是你费了很大力气才变成的你生命之内的东西。爱好，不会给你带来很多次愉悦，而会让你投入很多次自我约束。</strong></p>
<h3 id="爱">爱</h3>
<p>有人说，<strong>如果你真的爱一个人，你的表现就是八个字，“很有时间，不怕麻烦”。</strong> 真是让人拍案叫绝。</p>
<p>爱这个东西因为是主观心理状态，口说无凭，很难衡量。但是用时间和麻烦这两个维度，就能把它客观化。</p>
<p>你想，“时间&quot;的弹性非常大。我们经常说，“没时间，没时间&quot;，但扪心自问，我们真的是没有时间吗？对爱的人也没有吗？还有“麻烦&quot;，也几乎有无穷的伸缩性。对于陌生人，抬抬眼皮都嫌麻烦，但对自己心爱的孩子，则可以无微不至。</p>
<p>用这两样弹性很大的东西来衡量爱的程度，真是再合适不过了。除此之外，<strong>所谓“我为你付出这么多&quot;“我这么辛苦都是为了谁&quot;，都只是出于责任，而不是出于爱。</strong> 我们都可以拿“很有时间，不怕麻烦&quot;这个标准来衡量一下，我们到底有多爱我们身边的人，不管是父母、伴侣，还是孩子。</p>
<h3 id="爱自己">爱自己</h3>
<p>有这么一句话：<strong>“你怎么爱你自己，就是在教别人怎么爱你。</strong></p>
<p>你整天把自己收拾得干净利落，别人才会想方设法夸你好看或者帅气。你爱读书爱思考，别人才会送你书，或者认真对待你的见解。你爱美食，而且有精深的研究，别人才会请你吃美食，送你好食材。别人爱你的方式，是由你自己决定的。</p>
<p>仔细想想，这其实是一个很颠覆的观点。因为我们是在父爱、母爱里成长起来的。<strong>父母之爱的特点是，你缺什么，就给你补什么。而我们进入社会之后，情况就变了。在成人的世界里，自己没有的东西，别人也不会给。</strong> 即使环境充满了善意、资源、工具，甚至爱，也是如此。这些东西，其实都只是“自我的放大器&quot;。</p>
<p>所以你看，<strong>所谓的缺爱，其实就是我们对自己还不够好。</strong></p>
]]></content>
      <categories>
        <category>二课</category>
        <category>《启发》</category>
      </categories>
      <tags>
        <tag>学习记录</tag>
        <tag>二课</tag>
      </tags>
  </entry>
  <entry>
    <title>优化日记</title>
    <url>/posts/ca1c84cd.html</url>
    <content><![CDATA[<h3 id="准备优化下">准备优化下</h3>
<blockquote>
<p>2023-11-23 14:27今天先优化一点点</p>
</blockquote>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>小记</tag>
        <tag>优化</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建小记</title>
    <url>/posts/53191.html</url>
    <content><![CDATA[<h3 id="前言">前言</h3>
<blockquote>
<p>其实之前一直想用github搭一个了，无奈磕磕碰碰，遇点小困难就却难而退了，这几天在其他事情上也是这样，就换个地折腾一下。</p>
</blockquote>
<h3 id="感谢的大佬">感谢的大佬</h3>
<ol>
<li><a href="https://lin64850.github.io/">Eureka</a></li>
<li><a href="https://space.bilibili.com/13282871">卷二兔</a></li>
</ol>
<h3 id="参考文档">参考文档</h3>
<ol>
<li><a href="https://hexo.io/zh-cn/docs/">Hexo</a></li>
<li><a href="https://butterfly.js.org/posts/21cfbf15/">butterfly</a></li>
</ol>
<h3 id="安装过程">安装过程</h3>
<ol>
<li>安装Node.js</li>
<li>安装Git <!--这个没想清楚作用--></li>
<li>安装Hexo</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">hexo init &lt;folder&gt;</span><br><span class="line">cd &lt;folder&gt;</span><br><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>安装Hexo-theme-butterfly</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-theme-butterfly</span><br><span class="line">npm update hexo-theme-butterfly</span><br><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>配置_config.yml和_config.butterfly.yml文件</li>
<li>实施部署</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>
<blockquote>
<p>上面少了一块github的配置，就不说了哈哈</p>
</blockquote>
<h3 id="感想">感想</h3>
<blockquote>
<p>昨天一整天都不在状态(或许以后很长一段时间都这样哈哈，也没关系吧，速度调节，欧力给！)，晚上临时想着也不想做那件事(正在发愁的一件事，搭完之后还是要回归那件事的)，也就想折腾一下个人博客，看看视频，跟着上面两位大哥引荐与教学，很快可以搞定的，出版就这样，其实我还有一个其他博客的，但是要买服务器、域名啥的，之后过期就丢了哈哈！</p>
</blockquote>
<h3 id="后记">后记</h3>
<blockquote>
<p>之后有空就玩玩这个，看看有没啥需要记录的。</p>
</blockquote>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>小记</tag>
        <tag>搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>隐私保护相关</title>
    <url>/posts/776f3c45.html</url>
    <content><![CDATA[<h2 id="群签名">群签名</h2>
<p>群签名（group signature）方案是一种类似于数字签名的密码原语，其目的在于允许用户代表群签名消息，并在该群内保持匿名。看到签名的人可以用公钥验证消息是由群成员发送的，但不知道是哪一个。用户不能滥用匿名行为，因为群管理员可以通过使用秘密信息（密钥）来消除用户的匿名性。在电子商务、电子政务、企业管理等场景中可以应用。</p>
<p>群签名的安全性和效率成为应用的瓶颈。许多安全的群签名效率较低，许多已有的群签名不支持成员撤销或成员撤销效率很低，不适合大群组应用。经典的群签名方案有 ACJT 2000、BBS04 等，但它们存在无法撤销、效率低下等问题。</p>
<p>详细流程参考 <a href="https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/design/privacy.html#id20">FISCO BCOS隐私特性：群/环签名技术实现</a></p>
<h2 id="环签名">环签名</h2>
<p>环签名（ring signature）是一种数字签名方案，最初由Rivest等人提出。环签名是一种简化的群签名，其中只有环成员没有管理者，不需要环成员间的合作。与群签名关键区别在于环签名没有 ”群管理员“，没有可信中心，没有群的建立过程。对验证者来说，签名人是完全正确匿名的。提供了一种匿名泄露秘密的巧妙方法，无条件匿名性在需要长期保护信息的特殊环境中非常有用。</p>
<h2 id="聚合签名">聚合签名</h2>
<p>聚合签名是一种将任意多个签名聚合成一个签名的变体签名方案。可以将一笔多签交易的各个参与方的公钥和签名合并为一个公钥与签名，整个合并过程是不可见的，无法从合并后的公钥与签名推导出合并前的信息。当前通常使用 Schnorr 签名算法实现签名聚合。私钥签名，公钥验证签名。</p>
<h2 id="假名技术">假名技术</h2>
<p>假名技术允许用户使用临时的、不相关的身份信息进行通信。用户可以使用伪造的身份或随机生成的身份发送消息，从而保护其真实身份的隐私。常用于保护用户的隐私和匿名通信。</p>
<h3 id="补充：在车联网中的应用">补充：在车联网中的应用</h3>
<p>在车辆通信中，假名通常指匿名身份或伪装身份，以保护车辆和驾驶员的隐私。假名的使用旨在防止对车辆的跟踪或识别。可以通过使用假名证书代替用户的真实身份，确保车辆在交流信息时可以保持一定的匿名性。</p>
<p>详细信息可参考 <a href="https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/design/privacy.html#id20">FISCO BCOS隐私特性：群/环签名技术实现</a>。</p>
<h2 id="匿名技术">匿名技术</h2>
<p>匿名技术是一组方法和协议，旨在隐藏个人的真实身份信息。在匿名技术中，参与者可以通过使用伪装身份或通过特定的协议来隐藏自己的身份，从而保护隐私。匿名技术广泛应用于匿名通信、网络隐私保护、数字货币等领域。</p>
<h2 id="群签名、假名、匿名关系">群签名、假名、匿名关系</h2>
<ol>
<li>
<p><strong>群签名技术和假名技术的应用</strong></p>
<ul>
<li>群签名技术通过将签名与群体相关联来实现匿名性。</li>
<li>假名技术允许用户使用伪装的身份进行通信，从而实现匿名性。</li>
</ul>
</li>
<li>
<p><strong>不同的应用场景</strong></p>
<ul>
<li>群签名技术通常用于在群体中实现对消息的匿名签名。</li>
<li>假名技术通常用于在一对一通信或多对多通信中隐藏个人的真实身份。</li>
</ul>
</li>
<li>
<p><strong>匿名技术的广泛概念</strong></p>
<ul>
<li>匿名技术是一个更广泛的概念，包括群签名技术和假名技术，以及其他一些实现匿名性和隐私保护的密码学方法和协议。</li>
</ul>
</li>
</ol>
<h2 id="身份基签名（IBS）">身份基签名（IBS）</h2>
<p>身份基签名具备如下特征：</p>
<ol>
<li>用户的公钥可以是其公开身份，相应的私钥由系统主私钥盲化身份生成。</li>
<li>系统主私钥用于生成用户私钥，用户可利用私钥进行签名。</li>
<li>具体算法包括初始化算法、私钥提取算法、签名算法和验证算法。</li>
</ol>
<p>在基于身份的数字签名方案中，密钥生成中心（PKG）起到关键作用，验证者只需验证用户身份的真实性。关于基于身份的数字签名的安全性证明，不同方案存在多种方法，如基于椭圆曲线上的双线性配对、二次剩余理论等。</p>
<h3 id="补充">补充</h3>
<p>在具有特殊功能的数字签名领域，如群签名、代理签名、盲签名、聚合签名、多签名等，也有相应的基于身份的签名方案研究。</p>
<h2 id="变色龙函数">变色龙函数</h2>
<p>变色龙哈希函数具有四个主要的算法：</p>
<ol>
<li>
<p><strong>密钥生成算法：</strong> 给定安全常数，输出变色龙哈希的公钥和私钥（陷门）。</p>
</li>
<li>
<p><strong>哈希生成算法：</strong> 输入公钥、随机数和任意消息，生成哈希值和随机数。</p>
</li>
<li>
<p><strong>哈希验证算法：</strong> 输入公钥、任意消息和哈希值、随机数，若是正确的哈希值，则输出1，否则输出0。</p>
</li>
<li>
<p><strong>哈希碰撞算法：</strong> 输入私钥（陷门）、消息、新消息和哈希值、随机数，输出新随机数，使得两个哈希值相等。</p>
</li>
</ol>
<p><strong>举例</strong>（基于离散对数的变色龙哈希函数）：</p>
<ol>
<li>密钥生成：p、q为素数，公钥pk为 $y=g^x \mod p$</li>
<li>哈希生成：$\text{Hash}(m1, r1) = g^{m1} * y^{r1} \mod p$</li>
<li>哈希碰撞：$r2 = x*m1 - m2 + r1 \mod p$</li>
</ol>
<p><strong>来源：</strong></p>
<ol>
<li><a href="%E9%93%BE%E6%8E%A51">CSDN博客</a></li>
<li><a href="%E9%93%BE%E6%8E%A52">CSDN博客</a></li>
<li><a href="%E9%93%BE%E6%8E%A53">知乎专栏</a></li>
<li><a href="%E9%93%BE%E6%8E%A54">CodeAntenna</a></li>
<li><a href="%E9%93%BE%E6%8E%A55">简书</a></li>
</ol>
<h2 id="K-匿名性">K-匿名性</h2>
<p>K-匿名性是一种匿名化数据的性质。如果一组公开的数据中，任何一个人的信息都不能和其他至少 k-1 人区分开，则称该数据满足 k-匿名性。</p>
<p><strong>实现方法：</strong></p>
<ol>
<li><strong>数据抑制：</strong> 用星号“*”取代一些属性的值，可以是整列或部分值。</li>
<li><strong>数据泛化：</strong> 用更宽泛的类别取代一些属性的精确值，如将具体年龄改写为年龄范围。</li>
</ol>
<p><strong>攻击方式：</strong></p>
<ol>
<li><strong>同质性攻击：</strong> 如果目标属性在 k 个条目中的取值都相同，即使数据已经被 k-匿名化，目标属性在 k 条记录中的取值仍然可以被获取。</li>
<li><strong>背景知识攻击：</strong> 利用目标属性与准标识符属性之间的联系来减少目标属性里可能值的数量。</li>
</ol>
]]></content>
      <categories>
        <category>隐私保护</category>
        <category>密码学</category>
      </categories>
      <tags>
        <tag>学习记录</tag>
        <tag>隐私保护</tag>
        <tag>身份认证</tag>
      </tags>
  </entry>
</search>
